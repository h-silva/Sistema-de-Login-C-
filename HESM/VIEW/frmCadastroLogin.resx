<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>